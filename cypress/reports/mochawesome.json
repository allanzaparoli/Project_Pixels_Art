{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-02-18T14:52:00.691Z",
    "end": "2022-02-18T14:53:21.378Z",
    "duration": 80687,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f133fbec-6c28-489b-979e-a004fbc6cacd",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c6420c5-be29-4d58-994e-a15722ce149d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "0f6202aa-a9f8-44ef-806d-ec003d00b08a",
              "parentUUID": "7c6420c5-be29-4d58-994e-a15722ce149d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f6202aa-a9f8-44ef-806d-ec003d00b08a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "00f841f1-b44f-46c0-a209-8d8b9ec665c9",
              "parentUUID": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "51e8bb18-ce6c-4cbf-8f1c-ebfcd5084093",
              "parentUUID": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "542dcd5a-73b6-4e7e-98a3-f7db56b974e0",
              "parentUUID": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "04767d25-70c0-44a6-936c-35221832f532",
              "parentUUID": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "d10dd10e-1a6b-4d1a-a2a8-286c6e31b4b1",
              "parentUUID": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "0ee7c5ff-545d-4866-90d7-b45220300ad0",
              "parentUUID": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "dc8aa646-987b-41d9-bfc0-3dad38af7efa",
              "parentUUID": "e4b43490-62ec-4ea3-ba8d-b941681958fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00f841f1-b44f-46c0-a209-8d8b9ec665c9",
            "51e8bb18-ce6c-4cbf-8f1c-ebfcd5084093",
            "542dcd5a-73b6-4e7e-98a3-f7db56b974e0",
            "04767d25-70c0-44a6-936c-35221832f532",
            "d10dd10e-1a6b-4d1a-a2a8-286c6e31b4b1",
            "0ee7c5ff-545d-4866-90d7-b45220300ad0",
            "dc8aa646-987b-41d9-bfc0-3dad38af7efa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 876,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "11cee38e-58c9-4077-97f8-2e262d4daccd",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "338176dc-39c2-4baf-a375-66e5281d9a25",
              "parentUUID": "11cee38e-58c9-4077-97f8-2e262d4daccd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "82c64c4d-66af-4729-af1b-a15977f635e2",
              "parentUUID": "11cee38e-58c9-4077-97f8-2e262d4daccd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "338176dc-39c2-4baf-a375-66e5281d9a25",
            "82c64c4d-66af-4729-af1b-a15977f635e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3391ee7f-5bef-4b36-8f85-ed402f0798a7",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "f9d26788-046d-4d76-b6d6-2b736b9a2cdc",
              "parentUUID": "3391ee7f-5bef-4b36-8f85-ed402f0798a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "e6c6ada0-0dcb-437f-88d7-38eb6d9c59f4",
              "parentUUID": "3391ee7f-5bef-4b36-8f85-ed402f0798a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "67ac1a98-2974-47ce-b12c-9bc68345f4c4",
              "parentUUID": "3391ee7f-5bef-4b36-8f85-ed402f0798a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "4fae7e85-e31b-4ff9-9816-837fa0528bc8",
              "parentUUID": "3391ee7f-5bef-4b36-8f85-ed402f0798a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9d26788-046d-4d76-b6d6-2b736b9a2cdc",
            "e6c6ada0-0dcb-437f-88d7-38eb6d9c59f4",
            "67ac1a98-2974-47ce-b12c-9bc68345f4c4",
            "4fae7e85-e31b-4ff9-9816-837fa0528bc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 525,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ae90b63-4f56-4d28-b8a4-81737cec5076",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "4e1a0d75-170f-42c6-8ad2-db7ffc50cf52",
              "parentUUID": "0ae90b63-4f56-4d28-b8a4-81737cec5076",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "7e8e656e-9b7b-433c-8d7e-c82200fef00e",
              "parentUUID": "0ae90b63-4f56-4d28-b8a4-81737cec5076",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e1a0d75-170f-42c6-8ad2-db7ffc50cf52",
            "7e8e656e-9b7b-433c-8d7e-c82200fef00e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 655,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "027fdd16-9fb7-4994-ade8-1c4bd48b6e6b",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1c97d803-62c5-4998-baae-3374dc74942e",
              "parentUUID": "027fdd16-9fb7-4994-ade8-1c4bd48b6e6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "fa77d6d7-5f07-4718-a417-5415f9ecf390",
              "parentUUID": "027fdd16-9fb7-4994-ade8-1c4bd48b6e6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c97d803-62c5-4998-baae-3374dc74942e",
            "fa77d6d7-5f07-4718-a417-5415f9ecf390"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b14c7a2e-10a5-4952-b034-71c786caa6f0",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "0d9d49e5-cfab-45fb-9222-92aa8d37b054",
              "parentUUID": "b14c7a2e-10a5-4952-b034-71c786caa6f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "acc0b7e6-fe0b-4c31-afdf-f331df8c85d4",
              "parentUUID": "b14c7a2e-10a5-4952-b034-71c786caa6f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d9d49e5-cfab-45fb-9222-92aa8d37b054",
            "acc0b7e6-fe0b-4c31-afdf-f331df8c85d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8746,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e48ade0-d7f3-4e92-9f5b-6d8f6617b453",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "8885beef-3529-48ad-8059-2f0ebc1c8b76",
              "parentUUID": "8e48ade0-d7f3-4e92-9f5b-6d8f6617b453",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "e3f3591b-1e59-4f23-b889-71488daa3280",
              "parentUUID": "8e48ade0-d7f3-4e92-9f5b-6d8f6617b453",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c161fb15-08d5-461b-b349-4ab3db1cec14",
              "parentUUID": "8e48ade0-d7f3-4e92-9f5b-6d8f6617b453",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8885beef-3529-48ad-8059-2f0ebc1c8b76",
            "e3f3591b-1e59-4f23-b889-71488daa3280",
            "c161fb15-08d5-461b-b349-4ab3db1cec14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11695,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "225680c9-d165-402a-9650-d827c5b4c055",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "3bc3864a-a6a4-4ca0-a7b2-e151d29cefa8",
              "parentUUID": "225680c9-d165-402a-9650-d827c5b4c055",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "daaab8b7-a7d0-434e-b081-c5e0201e3833",
              "parentUUID": "225680c9-d165-402a-9650-d827c5b4c055",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "cc965e54-d419-4a3a-9dd6-7222cd92653c",
              "parentUUID": "225680c9-d165-402a-9650-d827c5b4c055",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "da684e7b-8580-4a60-8605-a6e5461cfec7",
              "parentUUID": "225680c9-d165-402a-9650-d827c5b4c055",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bc3864a-a6a4-4ca0-a7b2-e151d29cefa8",
            "daaab8b7-a7d0-434e-b081-c5e0201e3833",
            "cc965e54-d419-4a3a-9dd6-7222cd92653c",
            "da684e7b-8580-4a60-8605-a6e5461cfec7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2581,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4468,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "12ed5ed3-799d-4a4d-b1c2-51ba9d330a2f",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4431,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b1c0f998-2d3a-45dc-811e-1ca30b4a223f",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4420,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e4119200-de5f-46dd-8b1e-611926672e04",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4429,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2a81008a-06f9-47c7-b981-4a8aa5beaa98",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4400,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "27fd0670-1cc0-4341-a8f6-cae6aba45c3b",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4389,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8a9c594c-26d9-4736-8376-cf60daccd265",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a0138423-9308-414f-9d0d-e7d919d73a41",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e5d62b81-3d00-4a55-8593-4a39deb11969",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fbe9c8b7-c156-44ca-baf1-580db982d9d2",
              "parentUUID": "09001660-3798-4fdf-87cd-7a2ccdcc198b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "12ed5ed3-799d-4a4d-b1c2-51ba9d330a2f",
            "b1c0f998-2d3a-45dc-811e-1ca30b4a223f",
            "e4119200-de5f-46dd-8b1e-611926672e04",
            "2a81008a-06f9-47c7-b981-4a8aa5beaa98",
            "27fd0670-1cc0-4341-a8f6-cae6aba45c3b",
            "8a9c594c-26d9-4736-8376-cf60daccd265",
            "a0138423-9308-414f-9d0d-e7d919d73a41",
            "e5d62b81-3d00-4a55-8593-4a39deb11969",
            "fbe9c8b7-c156-44ca-baf1-580db982d9d2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39729,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d45d93f-e2a2-4565-940c-040c7a526c6c",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4415,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "aab2e5b5-93f3-496b-b98e-08a60e7d260f",
              "parentUUID": "4d45d93f-e2a2-4565-940c-040c7a526c6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4457,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0aebabfb-a10e-4d4e-a22b-f165c9443be9",
              "parentUUID": "4d45d93f-e2a2-4565-940c-040c7a526c6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4418,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59544/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59544/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59544/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59544/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59544/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59544/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "835d1dc9-cce2-4abf-80e9-6d80bea9fc8b",
              "parentUUID": "4d45d93f-e2a2-4565-940c-040c7a526c6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aab2e5b5-93f3-496b-b98e-08a60e7d260f",
            "0aebabfb-a10e-4d4e-a22b-f165c9443be9",
            "835d1dc9-cce2-4abf-80e9-6d80bea9fc8b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "678fe544-8684-48fd-b795-d451f3cdd7a2",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59544/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59544/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59544/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59544/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59544/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59544/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59544/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "bc08b884-ca4f-4b00-9865-94d79806b951",
              "parentUUID": "678fe544-8684-48fd-b795-d451f3cdd7a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59544/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59544/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59544/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59544/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59544/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59544/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59544/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59544/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59544/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59544/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59544/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59544/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "dbad035b-d46e-43f9-98e1-88204a9d84f9",
              "parentUUID": "678fe544-8684-48fd-b795-d451f3cdd7a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bc08b884-ca4f-4b00-9865-94d79806b951",
            "dbad035b-d46e-43f9-98e1-88204a9d84f9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1037,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}